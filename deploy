#!/bin/bash

# Set static environment variables for Keycloak and PostgreSQL
export KC_DB_PASSWORD="simplepass"
export KC_BOOTSTRAP_ADMIN_USERNAME="admin"
export KC_BOOTSTRAP_ADMIN_PASSWORD="adminpass"
export KC_HTTP_PORT=8005

# Save environment variables to a file
cat <<EOF > .env
KC_DB_PASSWORD=$KC_DB_PASSWORD
KC_BOOTSTRAP_ADMIN_USERNAME=$KC_BOOTSTRAP_ADMIN_USERNAME
KC_BOOTSTRAP_ADMIN_PASSWORD=$KC_BOOTSTRAP_ADMIN_PASSWORD
KC_HTTP_PORT=$KC_HTTP_PORT
EOF

# Output generated credentials
echo "Generated environment variables:"
echo "KC_DB_PASSWORD: $KC_DB_PASSWORD"
echo "KC_BOOTSTRAP_ADMIN_USERNAME: $KC_BOOTSTRAP_ADMIN_USERNAME"
echo "KC_BOOTSTRAP_ADMIN_PASSWORD: $KC_BOOTSTRAP_ADMIN_PASSWORD"
echo "KC_HTTP_PORT: $KC_HTTP_PORT"

# Docker Compose Configuration
echo "Generating docker-compose.yml..."
cat <<EOF > docker-compose.yml
version: "3.8"

services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/stadb
      - KC_DB_USERNAME=sta
      - KC_DB_PASSWORD=\${KC_DB_PASSWORD}
      - KC_BOOTSTRAP_ADMIN_USERNAME=\${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=\${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KC_HTTP_PORT=8005
    ports:
      - "8005:8005"
    depends_on:
      - postgres
    networks:
      - keycloak_network
    volumes:
      - ./idp/keycloak_data:/opt/keycloak/data
      - ./idp/keycloak-realm.json:/opt/keycloak/data/import/realm.json:ro

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_DB=stadb
      - POSTGRES_USER=sta
      - POSTGRES_PASSWORD=\${KC_DB_PASSWORD}
    networks:
      - keycloak_network
    volumes:
      - ./idp/postgres_data:/var/lib/postgresql/data

networks:
  keycloak_network:
    driver: bridge
EOF

echo "Docker Compose setup completed."

# Stop any existing containers
docker-compose down -v

# Start the services using Docker Compose
docker-compose up -d

